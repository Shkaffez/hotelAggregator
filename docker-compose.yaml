version: '3.3'
services:

  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - 3000:3000
      - 3001:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - ./database:/data/db
    ports:
      - 27017:27017
    networks:
      - nesjs-network
    restart: always

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USERNAME:-root}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD:-password}
    depends_on:
      - mongodb

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - nesjs-network

  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
networks:
  nesjs-network:
    driver: bridge
